<?xml version="1.0" encoding="UTF-8"?>

<unit name="DBusWorkrave">
  <import>
    <include name="Core.hh"/>
    <include name="Break.hh"/>
    <include name="config/IConfigurator.hh"/>
    <namespace name="workrave"/>
  </import>
  
  <enum name="break_id" csymbol="BreakId">
    <value name="microbreak"  csymbol="BREAK_ID_MICRO_BREAK" value="0"/>
    <value name="restbreak"   csymbol="BREAK_ID_REST_BREAK"/>
    <value name="dailylimit"  csymbol="BREAK_ID_DAILY_LIMIT"/>
  </enum>
  
  <enum name="operation_mode" csymbol="OperationMode">
    <value name="normal"    csymbol="OperationMode::Normal" value="0"/>
    <value name="suspended" csymbol="OperationMode::Suspended"/>
    <value name="quiet"     csymbol="OperationMode::Quiet"/>
  </enum>
  
  <enum name="usage_mode" csymbol="UsageMode">
    <value name="normal"    csymbol="UsageMode::Normal" value="0"/>
    <value name="reading"   csymbol="UsageMode::Reading"/>
  </enum>
  
  <interface name="org.workrave.CoreInterface" csymbol="Core">
    <method name="SetOperationMode" csymbol="set_operation_mode">
      <arg type="operation_mode" name="mode" direction="in" />
    </method>
    
    <method name="GetOperationMode" csymbol="get_operation_mode">
      <arg type="operation_mode" name="mode" direction="out" hint="return"/>
    </method>
    
    <method name="SetUsageMode" csymbol="set_usage_mode">
      <arg type="usage_mode" name="mode" direction="in" />
    </method>

    <method name="GetUsageMode" csymbol="get_usage_mode">
      <arg type="usage_mode" name="mode" direction="out" hint="return"/>
    </method>

    <method name="ReportActivity" csymbol="report_external_activity">
      <arg type="string" name="who" direction="in" />
      <arg type="bool" name="act" direction="in" />
    </method>

    <method name="IsActive" csymbol="is_user_active">
      <arg type="bool" name="value" direction="out" hint="return"/>
    </method>

    <signal name="OperationModeChanged">
      <arg type="operation_mode" name="mode"/>
    </signal>
    
    <signal name="UsageModeChanged">
      <arg type="usage_mode" name="mode"/>
    </signal>
  </interface>

  <interface name="org.workrave.BreakInterface" csymbol="Break">
    <method name="IsTimerRunning" csymbol="is_running">
      <arg type="bool"    name="value"    direction="out"  hint="return"/>
    </method>

    <method name="GetTimerIdle" csymbol="get_elapsed_idle_time">
      <arg type="int32"    name="value"    direction="out" hint="return"/>
    </method>

    <method name="GetTimerElapsed" csymbol="get_elapsed_time">
      <arg type="int32"     name="value"    direction="out" hint="return"/>
    </method>
    
    <method name="GetTimerOverdue" csymbol="get_total_overdue_time">
      <arg type="int32"     name="value"    direction="out" hint="return"/>
    </method>
    
    <method name="PostponeBreak" csymbol="postpone_break"/>
    <method name="SkipBreak" csymbol="skip_break"/>

    <signal name="Changed">
      <arg type="string" name="progress"/>
    </signal>
  </interface>
  <interface name="org.workrave.ConfigInterface" csymbol="IConfigurator">
    <method name="SetString" csymbol="set_value">
      <arg type="string" name="key" direction="in" />
      <arg type="string" name="value" direction="in" />
      <arg type="bool"   name="success" direction="out" hint="return" />
    </method>

    <method name="SetInt" csymbol="set_value">
      <arg type="string" name="key" direction="in" />
      <arg type="int32"    name="value" direction="in" />
      <arg type="bool"   name="success" direction="out" hint="return" />
    </method>

    <method name="SetBool" csymbol="set_value">
      <arg type="string" name="key" direction="in" />
      <arg type="bool"   name="value" direction="in" />
      <arg type="bool"   name="success" direction="out" hint="return" />
    </method>
    
    <method name="SetDouble" csymbol="set_value">
      <arg type="string" name="key" direction="in" />
      <arg type="double" name="value" direction="in" />
      <arg type="bool"   name="success" direction="out" hint="return" />
    </method>
  
    <method name="GetString" csymbol="get_value">
      <arg type="string" name="key" direction="in" />
      <arg type="bool"   name="found" direction="out" hint="return" />
      <arg type="string" name="value" direction="out" />
    </method>

    <method name="GetInt" csymbol="get_value">
      <arg type="string" name="key" direction="in" />
      <arg type="int32"    name="value" direction="out" />
      <arg type="bool"   name="found" direction="out" hint="return" />
    </method>

    <method name="GetBool" csymbol="get_value">
      <arg type="string" name="key" direction="in" />
      <arg type="bool"   name="value" direction="out" />
      <arg type="bool"   name="found" direction="out" hint="return" />
    </method>
    
    <method name="GetDouble" csymbol="get_value">
      <arg type="string" name="key"   direction="in" />
      <arg type="double" name="value" direction="out" />
      <arg type="bool"   name="found" direction="out" hint="return" />
    </method>
  </interface>
</unit>
