name: CodeQL
on:
  push:
    branches:
      - "main"
      - "topic/*"
    tags:
      - "v1_11_*"
  pull_request:
    branches:
      - "main"
      - "topic/*"

jobs:
  check-msys2:
    runs-on: windows-latest
    permissions:
      security-events: write
      packages: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: clang64
          install: >-
            git
            mingw-w64-clang-i686-clang
            mingw-w64-clang-i686-cmake
            mingw-w64-clang-i686-lld
            mingw-w64-clang-i686-ninja
            mingw-w64-clang-x86_64-adwaita-icon-theme
            mingw-w64-clang-x86_64-boost
            mingw-w64-clang-x86_64-clang
            mingw-w64-clang-x86_64-cmake
            mingw-w64-clang-x86_64-gcc-compat
            mingw-w64-clang-x86_64-gtkmm3
            mingw-w64-clang-x86_64-lld
            mingw-w64-clang-x86_64-ninja
            mingw-w64-clang-x86_64-openssl
            mingw-w64-clang-x86_64-python
            mingw-w64-clang-x86_64-python-pip
            mingw-w64-clang-x86_64-spdlog
            mingw-w64-clang-x86_64-jq
            mingw-w64-clang-x86_64-uasm
            mingw-w64-clang-x86_64-rust
            mingw-w64-clang-x86_64-qt6-base
            mingw-w64-clang-x86_64-qt6-svg
            mingw-w64-clang-x86_64-qt6-tools
            tar
            xz
            zip

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: c-cpp
          build-mode: manual

      - name: Build
        shell: msys2 {0}
        run: |
          mkdir _build _deploy
          export MINGW_ROOT=/c/msys64
          export MSYSTEM=CLANG64
          cmake -G "Ninja" -B '${{ github.workspace }}/_build' \
            -DCMAKE_TOOLCHAIN_FILE=cmake/toolchains/msys2.cmake \
            -DCMAKE_BUILD_TYPE=Debug \
            -DWITH_UI=Gtk+3 \
            -DWITH_CRASHPAD=OFF \
            -DWITH_AUTO_UPDATE=ON \
            -DWITH_TRACING=ON
          cmake --build '${{github.workspace}}/_build' --config Debug

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:c-cpp"

  build-cmake:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: c-cpp
          build-mode: manual

      - name: Build
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-mark hold grub-efi-amd64-signed
          sudo apt update -y
          sudo apt dist-upgrade -y
          sudo apt install -y libunwind-dev
          sudo apt install -y \
                cmake \
                gettext \
                gobject-introspection \
                gsettings-desktop-schemas-dev \
                libayatana-indicator3-dev \
                libboost-chrono-dev \
                libboost-context-dev \
                libboost-coroutine-dev \
                libboost-date-time-dev \
                libboost-dev \
                libboost-filesystem-dev \
                libboost-log-dev \
                libboost-program-options-dev \
                libboost-regex-dev \
                libboost-system-dev \
                libboost-test-dev \
                libboost-thread-dev \
                libdbusmenu-glib-dev \
                libdbusmenu-gtk3-dev \
                libgirepository1.0-dev \
                libgnome-panel-dev \
                libgstreamer1.0-dev \
                libgtk-3-dev \
                libgtkmm-3.0-dev \
                libindicator3-dev \
                libmate-panel-applet-dev \
                libpulse-dev \
                libspdlog-dev \
                libxfce4panel-2.0-dev \
                libxi-dev \
                libxmu-dev \
                libxss-dev \
                libxtst-dev \
                ninja-build
          cmake -G Ninja -B '${{ github.workspace }}/_build' -H. \
            -DCMAKE_INSTALL_PREFIX=_deploy  \
            -DWITH_TRACING=ON \
            -DWITH_UI=Gtk+3 \
            -DWITH_TESTS=ON \
            -DCODE_COVERAGE=OFF \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          cmake --build '${{github.workspace}}/_build' --config Debug

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:c-cpp"
