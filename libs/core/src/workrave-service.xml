<?xml version="1.0" encoding="UTF-8"?>

<unit name="DBusWorkrave">
    <import>
        <include name="Core.hh"/>
        <include name="config/IConfigurator.hh"/>
    </import>

    <enum name="break_id" csymbol="BreakId">
        <value name="microbreak" csymbol="workrave::BREAK_ID_MICRO_BREAK" value="0"/>
        <value name="restbreak" csymbol="workrave::BREAK_ID_REST_BREAK"/>
        <value name="dailylimit" csymbol="workrave::BREAK_ID_DAILY_LIMIT"/>
    </enum>

    <enum name="operation_mode" csymbol="workrave::OperationMode">
        <value name="normal" csymbol="workrave::OperationMode::Normal" value="0"/>
        <value name="suspended" csymbol="workrave::OperationMode::Suspended"/>
        <value name="quiet" csymbol="workrave::OperationMode::Quiet"/>
    </enum>

    <enum name="usage_mode" csymbol="workrave::UsageMode">
        <value name="normal" csymbol="workrave::UsageMode::Normal" value="0"/>
        <value name="reading" csymbol="workrave::UsageMode::Reading"/>
    </enum>

    <interface name="org.workrave.CoreInterface" csymbol="Core">
        <method name="SetOperationMode" csymbol="set_operation_mode">
            <arg type="operation_mode" name="mode" direction="in" />
        </method>

        <method name="GetOperationMode" csymbol="get_regular_operation_mode">
            <arg type="operation_mode" name="mode" direction="out" hint="return"/>
        </method>

        <method name="SetUsageMode" csymbol="set_usage_mode">
            <arg type="usage_mode" name="mode" direction="in" />
        </method>

        <method name="GetUsageMode" csymbol="get_usage_mode">
            <arg type="usage_mode" name="mode" direction="out" hint="return"/>
        </method>

        <method name="ReportActivity" csymbol="report_external_activity">
            <arg type="string" name="who" direction="in" />
            <arg type="bool" name="act" direction="in" />
        </method>

        <method name="IsTimerRunning" csymbol="is_timer_running">
            <arg type="break_id" name="timer_id" direction="in"/>
            <arg type="bool" name="value" direction="out" />
        </method>

        <method name="GetTimerIdle" csymbol="get_timer_idle">
            <arg type="break_id" name="timer_id" direction="in"/>
            <arg type="int32" name="value" direction="out" hint="ptr"/>
        </method>

        <method name="GetTimerElapsed" csymbol="get_timer_elapsed">
            <arg type="break_id" name="timer_id" direction="in"/>
            <arg type="int32" name="value" direction="out" hint="ptr"/>
        </method>

        <method name="GetTimerRemaining" csymbol="get_timer_remaining">
            <arg type="break_id" name="timer_id" direction="in"/>
            <arg type="int32" name="value" direction="out" hint="ptr"/>
        </method>

        <method name="GetTimerOverdue" csymbol="get_timer_overdue">
            <arg type="break_id" name="timer_id" direction="in"/>
            <arg type="int32" name="value" direction="out" hint="ptr"/>
        </method>

        <method name="GetTime" csymbol="get_time">
            <arg type="int32" name="value" direction="out" hint="return"/>
        </method>

        <method name="GetBreakState" csymbol="get_break_stage">
            <arg type="break_id" name="timer_id" direction="in"/>
            <arg type="string" name="stage" direction="out" hint="return"/>
        </method>

        <method name="IsActive" csymbol="is_user_active">
            <arg type="bool" name="value" direction="out" hint="return"/>
        </method>

        <method name="PostponeBreak" csymbol="postpone_break">
            <arg type="break_id" name="timer_id" direction="in"/>
        </method>

        <method name="SkipBreak" csymbol="skip_break">
            <arg type="break_id" name="timer_id" direction="in"/>
        </method>

        <signal name="MicrobreakChanged">
            <arg type="string" name="progress"/>
        </signal>

        <signal name="RestbreakChanged">
            <arg type="string" name="progress"/>
        </signal>

        <signal name="DailylimitChanged">
            <arg type="string" name="progress"/>
        </signal>

        <signal name="OperationModeChanged">
            <arg type="operation_mode" name="mode"/>
        </signal>

        <signal name="UsageModeChanged">
            <arg type="usage_mode" name="mode"/>
        </signal>

        <signal name="BreakPostponed">
            <arg type="break_id" name="timer_id"/>
        </signal>

        <signal name="BreakSkipped">
            <arg type="break_id" name="timer_id"/>
        </signal>
    </interface>

    <interface name="org.workrave.ConfigInterface" csymbol="workrave::config::IConfigurator">
        <import>
            <include name="config/IConfigurator.hh"/>
            <namespace name="workrave"/>
        </import>

        <method name="SetString" csymbol="set_value">
            <arg type="string" name="key" direction="in" />
            <arg type="string" name="value" direction="in" />
        </method>

        <method name="SetInt" csymbol="set_value">
            <arg type="string" name="key" direction="in" />
            <arg type="int32" name="value" direction="in" />
        </method>

        <method name="SetBool" csymbol="set_value">
            <arg type="string" name="key" direction="in" />
            <arg type="bool" name="value" direction="in" />
        </method>

        <method name="SetDouble" csymbol="set_value">
            <arg type="string" name="key" direction="in" />
            <arg type="double" name="value" direction="in" />
        </method>

        <method name="GetString" csymbol="get_value">
            <arg type="string" name="key" direction="in" />
            <arg type="bool" name="found" direction="out" hint="return" />
            <arg type="string" name="value" direction="out" />
        </method>

        <method name="GetInt" csymbol="get_value">
            <arg type="string" name="key" direction="in" />
            <arg type="int32" name="value" direction="out" />
            <arg type="bool" name="found" direction="out" hint="return" />
        </method>

        <method name="GetBool" csymbol="get_value">
            <arg type="string" name="key" direction="in" />
            <arg type="bool" name="value" direction="out" />
            <arg type="bool" name="found" direction="out" hint="return" />
        </method>

        <method name="GetDouble" csymbol="get_value">
            <arg type="string" name="key" direction="in" />
            <arg type="double" name="value" direction="out" />
            <arg type="bool" name="found" direction="out" hint="return" />
        </method>
    </interface>

    <interface name="org.workrave.DebugInterface" csymbol="Test" condition="defined(HAVE_TESTS)">
        <import>
            <include name="Test.hh"/>
            <namespace name="workrave"/>
        </import>

        <enum name="break_id" csymbol="BreakId">
            <value name="microbreak" csymbol="BREAK_ID_MICRO_BREAK" value="0"/>
            <value name="restbreak" csymbol="BREAK_ID_REST_BREAK"/>
            <value name="dailylimit" csymbol="BREAK_ID_DAILY_LIMIT"/>
        </enum>

        <method name="Quit" csymbol="quit">
        </method>

    </interface>


</unit>
